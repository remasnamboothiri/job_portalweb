"""
Django settings for job_platform project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config
try:
    import dj_database_url
except ImportError:
    dj_database_url = None


# EMAIL CONFIGURATION - Multiple backends supported
# Choose between console (for testing) and SMTP (for production)

# For testing - emails will be printed to console/logs
if config('USE_CONSOLE_EMAIL', default=True, cast=bool):
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    DEFAULT_FROM_EMAIL = 'noreply@jobportal.com'
else:
    # For production - real email sending via SMTP
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
    EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
    EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
    EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
    EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
    DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default=config('EMAIL_HOST_USER', default='noreply@jobportal.com'))
    
    # Additional SMTP settings for better reliability
    EMAIL_USE_SSL = config('EMAIL_USE_SSL', default=False, cast=bool)
    EMAIL_TIMEOUT = config('EMAIL_TIMEOUT', default=30, cast=int)
    
# Fallback settings
if not DEFAULT_FROM_EMAIL:
    DEFAULT_FROM_EMAIL = 'noreply@jobportal.com'




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-d#0!h7gce58p*+azc3!q197qwfa37^o#jjx1hn6oxb*#av%zbw')

 # SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)


    # Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jobapp.apps.JobappConfig',
    'taggit',
    'rest_framework',
    'rest_framework_simplejwt',
            
    'django.contrib.sites',  # REQUIRED

    # Allauth apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # Google provider
    'allauth.socialaccount.providers.google',
            

            
]


AUTH_USER_MODEL='jobapp.CustomUser'
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'jobapp.middleware.RequestLoggingMiddleware',  # Log slow requests
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'jobapp.middleware.TimeoutHandlingMiddleware',  # Handle timeouts gracefully
]

ROOT_URLCONF = 'job_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR / 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'job_platform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# using postgresql as database
# make sure to innstall psycopg2binary package


    # DATABASES = {
    #      'default': {
    #         'ENGINE': 'django.db.backends.postgresql',
    #         'NAME':config('DB_NAME'),
    #         'USER':config('DB_USER'),
    #         'PASSWORD':config('DB_PASSWORD'),
    #         'HOST': config('DB_HOST'),
    #         'PORT': config('DB_PORT', default='5432'),
                
                
        #      }
        #  }

        # ALLOWED_HOSTS configuration
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='127.0.0.1,localhost').split(',')
ALLOWED_HOSTS = [host.strip() for host in ALLOWED_HOSTS if host.strip()]

        # Add production domain if not in environment variable
PRODUCTION_DOMAIN = config('PRODUCTION_DOMAIN', default='job-portal-23qb.onrender.com')
if PRODUCTION_DOMAIN not in ALLOWED_HOSTS:
    ALLOWED_HOSTS.extend([PRODUCTION_DOMAIN, '.onrender.com'])

        # Database configuration - PostgreSQL
if config('DATABASE_URL', default=None) and dj_database_url:
     # Use DATABASE_URL (production)
    DATABASES = {
        'default': dj_database_url.config(
            default=config('DATABASE_URL'),
            conn_max_age=600,
            conn_health_checks=True,
        )
    }
else:
 # Local PostgreSQL configuration
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config('DB_NAME', default='job_portal_db1'),
            'USER': config('DB_USER', default='postgres'),
            'PASSWORD': config('DB_PASSWORD', default='password'),
            'HOST': config('DB_HOST', default='localhost'),
            'PORT': config('DB_PORT', default='5432'),
        }
    }

        # CSRF settings for production
CSRF_TRUSTED_ORIGINS = [
    'https://{config("PRODUCTION_DOMAIN", default="job-portal-23qb.onrender.com")}',
    'https://*.onrender.com',
]

# Security settings
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = False  # Render handles SSL

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

        # Password validation
        # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


        # Internationalization
        # https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


        # Static files (CSS, JavaScript, Images)
        # https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
 #for development

if DEBUG:
    STATICFILES_DIRS = [
        BASE_DIR / 'static',
    ]
 # STATIC_ROOT = BASE_DIR / 'staticfiles'  # For collectstatic
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


        # For production media files on Render
if not DEBUG:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = '/opt/render/project/src/media/'

        # File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB

        # Default primary key field type
        # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LOGIN_URL = '/login/'  # or the path where your login page is

LOGIN_REDIRECT_URL = '/profile/'  # ðŸ‘ˆ after login redirect
LOGOUT_REDIRECT_URL = '/login/'  # or wherever you want
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGIN_METHODS = {'username', 'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']
ACCOUNT_EMAIL_VERIFICATION = 'optional'  # or 'mandatory'

        #based on google login intergrtion
SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # for admin login
    'allauth.account.auth_backends.AuthenticationBackend',  # for allauth
)

        # TEMPLATES[0]['OPTIONS']['context_processors'] += [
        #     'social_django.context_processors.backends',
        #     'social_django.context_processors.login_redirect',
        # ]



        # # login with google 
        # SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('GOOGLE_CLIENT_ID')
        # SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('GOOGLE_CLIENT_SECRET')

        #restframework settings

REST_FRAMEWORK = {
        'DEFAULT_AUTHENTICATION_CLASSES': [
            'rest_framework_simplejwt.authentication.JWTAuthentication'
        ],
        'DEFAULT_THROTTLE_CLASSES': [
            'rest_framework.throttling.AnonRateThrottle',
            'rest_framework.throttling.UserRateThrottle'
        ],
        'DEFAULT_THROTTLE_RATES': {
            'anon': '100/hour',
            'user': '1000/hour'
        }
    }


SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': config('GOOGLE_CLIENT_ID', default=''),
            'secret': config('GOOGLE_SECRET_KEY', default=''),
            'key': ''
        }
    }
}

        # ElevenLabs TTS Configuration
ELEVENLABS_API_KEY = config('ELEVENLABS_API_KEY', default='')

        # COMMENTED OUT - RunPod TTS Configuration (replaced with ElevenLabs)
        # RUNPOD_API_KEY = config('RUNPOD_API_KEY', default='')
        # JWT_SECRET = config('JWT_SECRET', default='')




        # Session Configuration for Interview Persistence - Add at bottom
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_AGE = 7200  # 2 hours

        # File upload settings - Increase for better performance
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB